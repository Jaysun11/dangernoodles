package uq.deco2800.dangernoodles.configparser;

import java.io.File;
import java.util.List;

import javax.xml.parsers.SAXParser;
import javax.xml.parsers.SAXParserFactory;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

/**
 * @author torusse
 *
 */
public class TerrainParser {
    
    private static final Logger logger = LoggerFactory.getLogger(TerrainParser.class.getClass());
    
    private List<List<Integer>> terrainList;

    /**
     * Constructor for the Terrain XML parser
     * 
     * @param fileName
     *            the file path of a valid Terrain XML file
     */
    public TerrainParser(String fileName) {
        try {
            File terrainFile = new File(fileName);
            SAXParserFactory factory = SAXParserFactory.newInstance();
            SAXParser parser = factory.newSAXParser();
            TerrainHandler terrainHandler = new TerrainHandler();
            parser.parse(terrainFile, terrainHandler);

            terrainList = terrainHandler.getTerrainList();

        } catch (Exception e) {
            logger.info("Terrain error: {}", e.getMessage());
            logger.error(e.getMessage());
        }
    }

    /**
     * Getter method for the terrain map generated by the parser
     * 
     * @return a terrain map array
     */
    public int[][] getTerrainArray() {
    	int outer = 0;
        int[][] list = new int[terrainList.size()][terrainList.get(0).size()];
        for (List<Integer> layer : terrainList) {
        	int inner = 0;
        	for (Integer number : layer) {
        		try {
        			list[outer][inner] = (int) number;
        		} catch (Exception e) {
                    logger.info("Tile map error: {}", e.getMessage());
        			logger.error("Ensure the layers of the tile map are of "
        					+ "equal length, "+outer+","+inner);
        		}
        		inner++;
        	}
        	outer++;
        }
        return list;
    }

}
